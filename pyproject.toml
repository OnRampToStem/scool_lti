[project]
name = "scool-lti"
version = "1.0.0"
description = "Student Centered Open Online Learning (SCOOL) LTI Integration"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "async-lru>=2.0.4",
    "asyncpg>=0.30.0",
    "fastapi>=0.115.5",
    "httpx>=0.27.2",
    "joserfc>=1.0.0",
    "passlib[bcrypt]>=1.7.4",
    "pydantic>=2.9.2",
    "python-multipart>=0.0.12",
    "shortuuid>=1.0.13",
    "SQLAlchemy[asyncio]>=2.0.36",
    "starlette>=0.41.0",
    "trustme>=1.2.0",
    "uvicorn[standard]>=0.32.0",
]

[dependency-groups]
dev = [
    "aiosqlite>=0.20.0",
    "alembic>=1.14.0",
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.27",
    "mypy>=1.13.0",
    "ruff>=0.7.3",
    "types-passlib",
]

[tool.mypy]
python_version = "3.13"
packages = "scool"
strict = true
warn_unreachable = true

[tool.ruff]
target-version = "py313"
extend-exclude = [".*", "docs", "temp"]

[tool.ruff.format]
preview = true

[tool.ruff.lint]
select = [
    "A",  # builtins
    "ARG",  # unused args
    "ASYNC",  # async
    "B",  # flake8-bugbear
    "C4",  # comprehensions
    "DTZ", # datetimez
    "E",  # pycodestyle (errors)
    "ERA",  # eradicate commented out code
    "F",  # Pyflakes
    "G",  # logging format
    "I",   # isort
    "ISC",  # implicit string concat
    "LOG",  # logging checks
    "N",  # pep8 naming
    "PERF",  # perflint
    "PIE",  # misc lints
    "PL",  # Pylint
    "PTH",  # pathlib
    "RET",  # returns
    "RSE",  # raises
    "RUF",  # ruff rules
    "S",  # flake8-bandit
    "SIM",  # simplify
    "T20",  # flake8-print
    "TRY",  # tryceratops
    "UP",  # pyupgrade
    "W",  # pycodestyle (warnings)
]
ignore = [
    "ISC001",  # ruff format warning
]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["pydantic.field_validator"]
ignore-names = ["setUp", "tokenUrl"]

[tool.ruff.lint.pylint]
max-args = 8
